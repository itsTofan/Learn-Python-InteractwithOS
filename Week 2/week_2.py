#-----------------------------------------
#programing with files
"""
- Absolute path is full path to resource
- Relative paths - shortcut, relative to current directory
- Reading file - file object
"""
file = open ("spider.txt")
#FIle descriptor - a token generated by the OS that allows program to do more operation with the file
print (file.readline()) #read single line and go to next line
print (file.readline())
print (file.read())
file.close()

with open("spider.txt") as file: #using with, python will close the file automatically
    print(file.readline())

#looping through files
with open("spider.txt") as file:
    for line in file:
        print(line.strip().upper()) #strip to clear new line

#copy files
file = open ("spider.txt")
lines = file.readlines()
file.close()
lines.sort()
print(lines)

#writing to files
# w - write, a - append - r - read
with open("novel.txt", "w") as file:
    file.write("Its awsome")

#working with files, delete, rename, time of modified
#os module 
import os
os.remove("novel.txt") #delete novel.txt
#os.rename("first_draft.txt", "final.txt")
#check if file exist
print(os.path.exists("final.txt"))
print(os.path.exists("userlist.txt"))

#practice lab
guests = open("guest.txt", "w")
initial_guests = ["Bob", "Andrea", "Manuel", "Polly", "Khalid"]

for i in initial_guests:
    guests.write(i + "\n")
    
guests.close()

with open("guest.txt") as guests:
    for line in guests:
        print(line)


new_guests = ["Sam", "Danielle", "Jacob"]

with open("guest.txt", "a") as guests:
    for i in new_guests:
        guests.write(i + "\n")

guests.close()

checked_out=["Andrea", "Manuel", "Khalid"]
temp_list=[]

with open("guest.txt", "r") as guests:
    for g in guests:
        temp_list.append(g.strip())

with open("guest.txt", "w") as guests:
    for name in temp_list:
        if name not in checked_out:
            guests.write(name + "\n")
guests_to_check = ['Bob', 'Andrea']
checked_in = []

with open("guest.txt","r") as guests:
    for g in guests:
        checked_in.append(g.strip())
    for check in guests_to_check:
        if check in checked_in:
            print("{} is checked in".format(check))
        else:
            print("{} is not checked in".format(check))

#more file information
print(os.path.getsize("spider.txt"))    #to get file size
print(os.path.getmtime("spider.txt"))    #to get last modified - unix time stamp
import datetime
timestamp = os.path.getmtime("spider.txt")
datetime.datetime.fromtimestamp(timestamp)
print(datetime.datetime(2020, 1, 6, 7, 2, 3, 899999))
print(os.path.abspath("spider.txt"))    #to get absoulte path


#-----------------file directory-------------------------------
print(os.getcwd())      #to get current directory
#os.mkdir("new_dir")    #create new directory
#os.chdir ("new_dir")    #change directory
print(os.getcwd())    
#os.rmdir("new_dir")     #to remove dir only if directory empty
print(os.listdir())              #show list in directory
dir = "D:\Tofan Learning\Learn-Python-InteractwithOS"
for name in os.listdir(dir):
    fullname = os.path.join(dir, name)
    if os.path.isdir(fullname):
        print("{} is a directory".format(fullname))
    else:
        print("{} is a file".format(fullname))



#--------------------CSV File----------------------
#comma separated values as segement of text
import csv
f = open ("csv_file.txt")
csv_f = csv.reader(f)
for row in csv_f:
    name, phone, role = row
    print("Name: {}, Phone: {}, Role: {}".format(name, phone, role))
f.close()

#generate CSV file
hosts = [["workstation.local","192.168.25.46"], ["webserver.cloud", "10.2.5.6"]]
with open("host.csv", "w") as hosts_csv:
    writer = csv.writer(hosts_csv)
    writer.writerows(hosts)


#read and writing files with dictionaries
with open ("software.csv") as software:
    reader = csv.DictReader(software)   #copy csv as dictionary
    for row  in reader:
        print(("{} has {} user").format(row["name"], row["users"]))

users = [ {"name": "Sol Mansi", "username": "solm", "department": "IT Infrastructure"}, 
         {"name": "Lio Nelson", "username": "lion", "department": "User Experiunce Research"},
         {"name": "Charlie Grey", "username": "greyc", "department": "Development"} ]
keys = ["name", "username", "department"]
with open("by_department.csv", "w") as by_department:
    writer = csv.DictWriter(by_department, fieldnames=keys)
    writer.writeheader()
    writer.writerows(users)


